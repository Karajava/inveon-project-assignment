{"version":3,"sources":["store/actions.js","store/reducer.js","App.js","index.js"],"names":["storeActions","SET_STORE_TEST","state","action","setIn","data","SET_STORE_COUNTER","counter","SET_STORE_SECOND_PAGE","SET_STORE_TODO","todo","reducer","arguments","length","undefined","Map","actor","type","FirstPage","lazy","__webpack_require__","e","then","bind","SecondPage","App","store","createStore","react_default","a","createElement","es","react_router_dom","className","react","fallback","react_router","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"6OAMeA,EANM,CACnBC,eAAgB,SAACC,EAAOC,GAAR,OAAmBD,EAAME,MAAM,CAAC,YAAa,QAASD,EAAOE,OAC7EC,kBAAmB,SAACJ,EAAOC,GAAR,OAAmBD,EAAME,MAAM,CAAC,YAAa,WAAYD,EAAOI,UACnFC,sBAAuB,SAACN,EAAOC,GAAR,OAAmBD,EAAME,MAAM,CAAC,aAAc,QAASD,EAAOE,OACrFI,eAAgB,SAACP,EAAOC,GAAR,OAAmBD,EAAME,MAAM,CAAC,aAAc,QAASD,EAAOO,QCOjEC,EARC,WAA2B,IAA1BT,EAA0BU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBG,cAAOZ,EAAWS,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnCE,EAAQhB,EAAaG,EAAOc,MAClC,OAAID,EACKA,EAAMd,EAAOC,GAEfD,GCAHgB,EAAYC,eAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YACvBC,EAAaL,eAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAqBfE,EAnBH,WACV,IAAMC,EAAQC,YAAYhB,GAE1B,OACEiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUL,MAAOA,GACfE,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAACI,EAAA,SAAD,CAAUC,SAAU,cAClBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWpB,IACpCU,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWd,UChBnDe,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fe906170.chunk.js","sourcesContent":["const storeActions = {\n  SET_STORE_TEST: (state, action) => state.setIn(['firstPage', 'data'], action.data),\n  SET_STORE_COUNTER: (state, action) => state.setIn(['firstPage', 'counter'], action.counter),\n  SET_STORE_SECOND_PAGE: (state, action) => state.setIn(['secondPage', 'data'], action.data),\n  SET_STORE_TODO: (state, action) => state.setIn(['secondPage', 'todo'], action.todo),\n};\nexport default storeActions;\n","import { Map } from 'immutable';\nimport storeActions from './actions';\n\nconst reducer = (state = Map(), action) => {\n  const actor = storeActions[action.type];\n  if (actor) {\n    return actor(state, action);\n  }\n  return state;\n};\n\nexport default reducer;","import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route, Switch } from 'react-router';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\n\n\nconst FirstPage = lazy(() => import('./pages/firstPage.js'));\nconst SecondPage = lazy(() => import('./pages/secondPage.js'));\n\nconst App = () => {\n  const store = createStore(reducer);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"pages-list\">\n          <Suspense fallback={\"Loading...\"}>\n            <Switch>\n              <Route path=\"/firstPage\" component={FirstPage} />\n              <Route path=\"/secondPage\" component={SecondPage} />\n            </Switch>\n          </Suspense>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}